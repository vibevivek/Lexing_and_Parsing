
%%
%name Calc

%term
  ID of string | TERM | NOT | AND | OR | XOR | EQUALS
  | IMPLIES | IF | THEN | ELSE | LPAREN | RPAREN | EOF | CONST of string

%nonterm FORMULA of string | STATEMENT of string | PROGRAM of string
(*%nonterm FORMULA of AST.formula | STATEMENT of AST.formula | PROGRAM of AST.formula*)

%pos int

%eop EOF
%noshift EOF

%right IF THEN ELSE
%right IMPLIES
%left AND OR XOR EQUALS
%right NOT
%nonassoc ID CONST TERM LPAREN RPAREN


%start PROGRAM

%verbose

%%
(*
PROGRAM: STATEMENT (STATEMENT)
STATEMENT: FORMULA TERM (FORMULA ^ "TERM ;0")
        | STATEMENT FORMULA TERM (STATEMENT ^ FORMULA ^ "TERM ;0")
        FORMULA:  ID ("ID " ^ ID ^ "0")
                | CONST ("CONST " ^ CONST ^ "0")
                | NOT FORMULA ("NOT NOT0" ^ FORMULA1)
                | FORMULA AND FORMULA (FORMULA1 ^ "AND AND0" ^ FORMULA2)
                | FORMULA OR FORMULA (FORMULA1 ^ "OR OR0" ^ FORMULA2)
                | FORMULA XOR FORMULA (FORMULA1 ^ "XOR XOR0" ^ FORMULA2)
                | FORMULA EQUALS FORMULA (FORMULA1 ^ "EQUALS EQUALS0" ^ FORMULA2)
                | FORMULA IMPLIES FORMULA (FORMULA1 ^ "IMPLIES IMPLIES0" ^ FORMULA2)
                | IF FORMULA THEN FORMULA ELSE FORMULA ("IF IF0" ^ FORMULA1 ^ "THEN THEN0" ^ FORMULA2 ^ "ELSE ELSE0" ^ FORMULA3)
                | LPAREN FORMULA RPAREN ("LPAREN (0" ^ FORMULA1 ^ "RPAREN )0")     
*)


PROGRAM:   STATEMENT (STATEMENT ^ "STATEMENT0PROGRAM" )
STATEMENT: FORMULA TERM (FORMULA ^ "TERM ;0")
        | STATEMENT FORMULA TERM (STATEMENT ^ "STATEMENT0" ^ FORMULA ^ "TERM ;0")
        FORMULA: ID ("ID " ^ ID ^ "0")
                | CONST ("CONST " ^ CONST ^ "0")
                | NOT FORMULA ("NOT NOT0" ^ FORMULA1 ^ "FORMULA0")
                | FORMULA AND FORMULA (FORMULA1 ^ "FORMULA0AND AND0" ^ FORMULA2 ^ "FORMULA0")
                | FORMULA OR FORMULA (FORMULA1 ^ "FORMULA0OR OR0" ^ FORMULA2 ^ "FORMULA0")
                | FORMULA XOR FORMULA (FORMULA1 ^ "FORMULA0XOR XOR0" ^ FORMULA2 ^ " FORMULA")
                | FORMULA EQUALS FORMULA (FORMULA1 ^ "FORMULA0EQUALS EQUALS0" ^ FORMULA2 ^ "FORMULA0")
                | FORMULA IMPLIES FORMULA (FORMULA1 ^ "FORMULA0IMPLIES IMPLIES0" ^ FORMULA2 ^ "FORMULA0")
                | IF FORMULA THEN FORMULA ELSE FORMULA ("IF IF0" ^ FORMULA1 ^ "FORMULA0THEN THEN0" ^ FORMULA2 ^ "FORMULA0ELSE ELSE0" ^ FORMULA3 ^ "FORMULA0")
                | LPAREN FORMULA RPAREN ("LPAREN (0" ^ FORMULA1 ^ "FORMULA0RPAREN )0")     



(*

PROGRAM: STATEMENT (STATEMENT)
STATEMENT: FORMULA TERM (FORMULA ^ " FORMULA " ^ " ; TERM FORMULA ")
        FORMULA:  ID (ID ^ " ID ")
                | CONST (CONST ^ " CONT ")
                | NOT FORMULA (" NOT NOT " ^ FORMULA1 ^ " FORMULA ")
                | FORMULA AND FORMULA (FORMULA1 ^ " FORMULA AND AND " ^ FORMULA2 ^ " FORMULA ")
                | FORMULA OR FORMULA (FORMULA1 ^ " FORMULA OR OR " ^ FORMULA2 ^ " FORMULA ")
                | FORMULA XOR FORMULA (FORMULA1 ^ " FORMULA XOR XOR " ^ FORMULA2 ^ " FORMULA ")
                | FORMULA EQUALS FORMULA (FORMULA1 ^ " FORMULA EQUALS EQUALS " ^ FORMULA2 ^ " FORMULA ")
                | FORMULA IMPLIES FORMULA (FORMULA1 ^ " FORMULA IMPLIES IMPLIES " ^ FORMULA2 ^ " FORMULA ")
                | IF FORMULA THEN FORMULA ELSE FORMULA ("IF IF " ^ FORMULA1 ^ " FORMULA THEN THEN " ^ FORMULA2 ^ " FORMULA ELSE ELSE " ^ FORMULA3 ^ " FORMULA ")
                | LPAREN FORMULA RPAREN ("( LPAREN " ^ FORMULA1 ^ " FORMULA ) RPAREN ")     
*)

(*PROGRAM: STATEMENT (STATEMENT)
STATEMENT: FORMULA TERM (AST.BinExp3(FORMULA, AST.Term))
        FORMULA:  ID (AST.Formula(ID))
                | CONST (AST.Formula("CONST"))
                | NOT FORMULA (AST.BinExp1(AST.Not, FORMULA1))
                | FORMULA AND FORMULA (AST.BinExp2(FORMULA1, AST.And, FORMULA2))
                | FORMULA OR FORMULA (AST.BinExp2(FORMULA1, AST.Or, FORMULA2))
                | FORMULA XOR FORMULA (AST.BinExp2(FORMULA1, AST.Xor, FORMULA2))
                | FORMULA EQUALS FORMULA (AST.BinExp2(FORMULA1, AST.Equals, FORMULA2))
                | FORMULA IMPLIES FORMULA (AST.BinExp2(FORMULA1, AST.Implies, FORMULA2))
                | IF FORMULA THEN FORMULA ELSE FORMULA (BinExp5(AST.If, FORMULA1, AST.Then, FORMULA2, AST.Else, FORMULA3))
                | LPAREN FORMULA RPAREN (AST.BinExp4(AST.Lparen, FORMULA1, AST.Rparen))     
*)






    (*FORMULA: ID (AST.Id(ID))
      | NOT FORMULA (AST.BinExp1(AST.Not, FORMULA1))
      | FORMULA AND FORMULA (AST.BinExp2(FORMULA1, AST.And, FORMULA2))
      | FORMULA OR FORMULA (AST.BinExp2(FORMULA1, AST.Or, FORMULA2))
      | FORMULA XOR FORMULA (AST.BinExp2(FORMULA1, AST.Xor, FORMULA2))
      | FORMULA EQUALS FORMULA (AST.BinExp2(FORMULA1, AST.Equals, FORMULA2))
      | FORMULA IMPLIES FORMULA (AST.BinExp2(FORMULA1, AST.Implies, FORMULA2))
      | IF FORMULA THEN FORMULA ELSE FORMULA (AST.BinExp5(AST.If, FORMULA1, AST.Then, FORMULA2, AST.Else, FORMULA3))
      | LPAREN FORMULA RPAREN (AST.BinExp4(AST.Lparen, FORMULA1, AST.Rparen))
      | FORMULA TERM (AST.BinExp3(FORMULA1, AST.Term))
      *)
